import{_ as t,c as e,o as a,a as l}from"./app-BhCUr_Hj.js";const n={},s=l('<h2 id="插件-开发中" tabindex="-1"><a class="header-anchor" href="#插件-开发中"><span>插件（开发中）</span></a></h2><p>流程框架在各个处理环节，一般情况下是无法对最初的流程设计进行更改的。<br> 想象一下场景： 任务分配流程： 最初设计流程时，部门涉及到有 3 层结构，流程的方向是从高级部门到低级部门，流程需要在第二级部门时，把权限分配给二级部门的审批人</p><ul><li>资金拨付审批 上级部门将资金拨付给下级部门后，希望由 2 级部门将资金分配给 3 级部门，例如三级部门有 10 个，总的资金是 100 万元，现在需要将 100 万元， 这时可以将分配权交给下级部门，由下级部门自主决定，这种场景下，下级部门的分配情况可能如下：</li></ul><table><thead><tr><th style="text-align:left;">部门</th><th style="text-align:center;">人数</th><th style="text-align:center;">分配金额（万元）</th></tr></thead><tbody><tr><td style="text-align:left;">部门一</td><td style="text-align:center;">10</td><td style="text-align:center;">10</td></tr><tr><td style="text-align:left;">部门二</td><td style="text-align:center;">12</td><td style="text-align:center;">12</td></tr><tr><td style="text-align:left;">部门...</td><td style="text-align:center;">x</td><td style="text-align:center;">x</td></tr></tbody></table><ul><li>流程携带新的数据 当2级部门将数据进行分配后，3级部门只能获得分配给自身的资金，而不能查看或者使用其他的资金</li></ul><h3 id="官方插件" tabindex="-1"><a class="header-anchor" href="#官方插件"><span>官方插件</span></a></h3><h4 id="🦁数量分配插件" tabindex="-1"><a class="header-anchor" href="#🦁数量分配插件"><span>🦁数量分配插件</span></a></h4><p>针对如上需求，框架提供了任务分配插件，通过artisan 命令进行发布资源，并自动集成到框架中</p><h4 id="🛠自定义插件" tabindex="-1"><a class="header-anchor" href="#🛠自定义插件"><span>🛠自定义插件</span></a></h4><p>框架提供了插件机制，允许用户开发者自定义插件，并集成到框架中，实现自定义功能。</p>',10),i=[s];function r(d,h){return a(),e("div",null,i)}const o=t(n,[["render",r],["__file","plugins.html.vue"]]),p=JSON.parse('{"path":"/guides/plugins.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"插件（开发中）","slug":"插件-开发中","link":"#插件-开发中","children":[{"level":3,"title":"官方插件","slug":"官方插件","link":"#官方插件","children":[]}]}],"git":{"updatedTime":1724063136000,"contributors":[{"name":"hulutech-web","email":"yuanhaozhuzhu@hotmail.com","commits":1}]},"filePathRelative":"guides/plugins.md"}');export{o as comp,p as data};
